{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","Panel","Collapse","Exchanges","exchangeList","exchanges","map","exchange","showArrow","header","rank","iconUrl","name","volume","numberOfMarkets","marketShare","id","HTMLReactParser","description","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","toLowerCase","includes","placeholder","onChange","e","target","gutter","currency","xs","sm","lg","extra","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimesStamp","console","log","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","toString","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.d690d5f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, {useState, useEffect} from 'react';\r\nimport {Button, Menu, Typography, Avatar} from \"antd\";\r\nimport {Link} from 'react-router-dom';\r\nimport {HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined} from \"@ant-design/icons\";\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const handleResize = ()  => setScreenSize(window.innerWidth);\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        handleResize();\r\n\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (screenSize < 768) {\r\n            setActiveMenu(false);\r\n        } else {\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize]);\r\n\r\n    return (\r\n        <div className='nav-container'>\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\"/>\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">Cryptoverse</Link>\r\n                </Typography.Title>\r\n                <Button\r\n                    className=\"menu-control-container\"\r\n                    onClick={() => setActiveMenu(!activeMenu)}\r\n                >\r\n                    <MenuOutlined/>\r\n                </Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined/>}>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined/>}>\r\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined/>}>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined/>}>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders  = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'f27327e4b6msh13771b0501497dep1c2f76jsnd7f663a9f701'\r\n};\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoApiHeaders})\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints:  (builder) =>  ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`),\r\n        }),\r\n        getCryptoDetails: builder.query( {\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query( {\r\n            query: ({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n        }),\r\n        getExchanges: builder.query( {\r\n            query: () => createRequest(`/exchanges`),\r\n        }),\r\n\r\n    }),\r\n});\r\n\r\nexport const {useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetExchangesQuery}  = cryptoApi;","import React from 'react';\r\nimport {Spin} from 'antd';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <Spin/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport millify from \"millify\";\r\nimport {Typography, Row, Col, Statistic} from \"antd\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {useGetCryptosQuery} from \"../services/cryptoApi\";\r\nimport {Cryptocurrencies, News} from \"../components\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst {Title} = Typography;\r\n\r\nconst Homepage = () => {\r\n    const {data,  isFetching} = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if (isFetching) return <Loader/>;\r\n\r\n    return (\r\n        <>\r\n            <Title level={2}  className=\"heading\">Global Crypto Stats</Title>\r\n            <Row>\r\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}/></Col>\r\n                <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}/></Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified/>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\r\n            </div>\r\n            <News simplified/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport millify from \"millify\";\r\nimport {Collapse, Row, Col,  Typography, Avatar} from \"antd\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\nimport {useGetExchangesQuery} from '../services/cryptoApi';\r\nimport Loader from \"./Loader\";\r\n\r\nconst {Text} = Typography;\r\nconst {Panel} =  Collapse;\r\n\r\nconst Exchanges = () => {\r\n    const  {data, isFetching} = useGetExchangesQuery();\r\n    const exchangeList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return <Loader/>;\r\n\r\n    return (\r\n        <>\r\n        <Row>\r\n            <Col span={6}>Exchanges</Col>\r\n            <Col span={6}>24h Trade  Volume</Col>\r\n            <Col span={6}>Markets</Col>\r\n            <Col span={6}>Change</Col>\r\n        </Row>\r\n            <Row>\r\n                {exchangeList.map((exchange) =>  (\r\n                    <Col span={24}>\r\n                        <Collapse>\r\n                            <Panel key={exchange.id}\r\n                                   showArrow={false}\r\n                                   header={(\r\n                                       <Row  key={exchange.id}>\r\n                                           <Col span={6}>\r\n                                               <Text><strong>{exchange.rank}.</strong></Text>\r\n                                                <Avatar className=\"exchange-image\"  src={exchange.iconUrl}/>\r\n                                                <Text><strong>{exchange.name}</strong></Text>\r\n                                           </Col>\r\n                                           <Col  span={6}>${millify(exchange.volume)}</Col>\r\n                                           <Col  span={6}>${millify(exchange.numberOfMarkets)}</Col>\r\n                                           <Col  span={6}>${millify(exchange.marketShare)}%</Col>\r\n                                       </Row>\r\n                                   )}\r\n                            >\r\n                                {HTMLReactParser(exchange.description || '')}\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Exchanges;","import React, {useState, useEffect} from 'react';\r\nimport millify from \"millify\";\r\nimport {Link} from 'react-router-dom';\r\nimport {Card, Row, Col, Input} from 'antd';\r\n\r\nimport {useGetCryptosQuery} from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n    const count = simplified ? 10 : 100;\r\n    const {data: cryptosList, isFetching} = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n        setCryptos(filteredData);\r\n\r\n    }, [cryptosList, searchTerm]);\r\n\r\n    if (isFetching) return <Loader/>;\r\n\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                    <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)}/>\r\n                </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card title={`${currency.rank}. ${currency.name}`}\r\n                                  extra={<img className=\"crypto-image\" src={currency.iconUrl}/>}\r\n                                  hoverable\r\n                            >\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cryptocurrencies;","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {Col, Row, Typography} from \"antd\";\r\n\r\nconst {Title} = Typography;\r\n\r\nconst LineChart = ({coinHistory, currentPrice, coinName}) => {\r\n    const coinPrice= [];\r\n    const coinTimesStamp = [];\r\n    console.log(coinHistory);\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\r\n        coinPrice.push(coinHistory.data.history[i].price);\r\n    }\r\n\r\n    for (let i = 0; i < coinHistory?.data?.history?.length; i++) {\r\n        coinTimesStamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\r\n    }\r\n\r\n    const data =  {\r\n      labels: coinTimesStamp,\r\n      datasets: [\r\n          {\r\n              label:  'Price in USD',\r\n              data: coinPrice,\r\n              fill: false,\r\n              backgroundColor:  '#0071bd',\r\n              borderColor:  '#0071bd'\r\n          }\r\n      ]\r\n    };\r\n\r\n    const options = {\r\n      scales: {\r\n          yAxes: [\r\n              {\r\n                  ticks: {\r\n                      beginAtZero: true\r\n                  }\r\n              }\r\n          ]\r\n      }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Row className=\"chart-header\">\r\n                <Title level={2} className=\"chart-title\">\r\n                    {coinName} Price Chart\r\n                </Title>\r\n                <Col className=\"price-container\">\r\n                    <Title level={5} className=\"price-change\">\r\n                        {coinHistory?.data?.change}%\r\n                    </Title>\r\n                    <Title level={5} className=\"current-price\">\r\n                        Current {coinName} Price: ${currentPrice}\r\n                    </Title>\r\n                </Col>\r\n            </Row>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LineChart;","import React, {useState} from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport millify from 'millify';\r\nimport {useParams} from 'react-router-dom';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport LineChart from \"./LineChart\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst {Title, Text} = Typography;\r\nconst {Option} = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const {coinId} = useParams();\r\n    const [timePeriod, setTimePeriod] = useState('7d');\r\n    const {data, isFetching} = useGetCryptoDetailsQuery(coinId);\r\n    const {data: coinHistory} = useGetCryptoHistoryQuery({coinId, timePeriod});\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if (isFetching) return <Loader/>;\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n\r\n    const genericStats = [\r\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n        { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n            <Col className=\"coin-heading-container\">\r\n                <Title level={2} className=\"coin-name\">\r\n                    {cryptoDetails.name}  ({cryptoDetails.slug}) Price\r\n                </Title>\r\n                <p>\r\n                    {cryptoDetails.name} live price is US dollars.\r\n                    View value  statistics, market cap and supply.\r\n                </p>\r\n            </Col>\r\n            <Select\r\n                defaultValue=\"7d\"\r\n                className=\"select-timeperiod\"\r\n                placeholder=\"Select Time Period\"\r\n                onChange={(value)=>setTimePeriod(value)}\r\n            >\r\n                {time.map((date)=>  <Option key={date.toString()}>{date}</Option>)}\r\n            </Select>\r\n            <LineChart\r\n                coinHistory={coinHistory}\r\n                currentPrice={millify(cryptoDetails.price)}\r\n                coinName={cryptoDetails.name}\r\n            />\r\n            <Col className=\"stats-container\">\r\n                <Col className=\"coin-value-statistics\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">\r\n                            {cryptoDetails.name} Value Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of  {cryptoDetails.name}\r\n                        </p>\r\n                    </Col>\r\n                    {stats.map(({icon, title, value}) => (\r\n                        <Col className=\"coin-stats\" key={title}>\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n                <Col className=\"other-stats-info\">\r\n                    <Col className=\"coin-value-statistics-heading\">\r\n                        <Title level={3} className=\"coin-details-heading\">\r\n                            Other Statistics\r\n                        </Title>\r\n                        <p>\r\n                            An overview showing the stats of  all cryptocurrencies\r\n                        </p>\r\n                    </Col>\r\n                    {genericStats.map(({icon, title, value}) => (\r\n                        <Col className=\"coin-stats\" key={title.toString()}>\r\n                            <Col className=\"coin-stats-name\">\r\n                                <Text>{icon}</Text>\r\n                                <Text>{title}</Text>\r\n                            </Col>\r\n                            <Text className=\"stats\">{value}</Text>\r\n                        </Col>\r\n                    ))}\r\n                </Col>\r\n            </Col>\r\n            <Col className=\"coin-desc-link\">\r\n                <Row className=\"coin-desc\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        What is {cryptoDetails.name} ?\r\n                        {HTMLReactParser(cryptoDetails.description)}\r\n                    </Title>\r\n                </Row>\r\n                <Col className=\"coin-links\">\r\n                    <Title level={3} className=\"coin-details-heading\">\r\n                        {cryptoDetails.name} Links\r\n                        {cryptoDetails.links.map((link) => (\r\n                            <Row className=\"coin-link\" key={link.name.toString()}>\r\n                                <Title level={5} className=\"link-name\">\r\n                                    {link.type}\r\n                                </Title>\r\n                                <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                                    {link.name}\r\n                                </a>\r\n                            </Row>\r\n                        ))}\r\n                    </Title>\r\n                </Col>\r\n            </Col>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default CryptoDetails;","import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'f27327e4b6msh13771b0501497dep1c2f76jsnd7f663a9f701'\r\n};\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoNewsHeaders});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints:  (builder) =>  ({\r\n        getCryptoNews: builder.query({\r\n            query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n});\r\n\r\nexport const {useGetCryptoNewsQuery}  = cryptoNewsApi;","import React, {useState} from 'react';\r\nimport {Select, Typography, Row, Col, Avatar, Card} from \"antd\";\r\nimport moment from 'moment';\r\n\r\nimport {useGetCryptoNewsQuery} from \"../services/cryptoNewsApi\";\r\nimport {useGetCryptosQuery} from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst {Text, Title} = Typography;\r\nconst {Option} = Select;\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ({simplified}) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n    const {data: cryptoNews} = useGetCryptoNewsQuery({newsCategory, count: simplified ? 6 : 12});\r\n    const {data} = useGetCryptosQuery(100);\r\n\r\n    if (!cryptoNews?.value) return <Loader/>;\r\n\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n            {!simplified &&  (\r\n                <Col span={24}>\r\n                    <Select\r\n                        showSearch\r\n                        className=\"select-news\"\r\n                        placeholder=\"Select a Crypto\"\r\n                        optionFilterProp=\"children\"\r\n                        onChange={(value)=> setNewsCategory(value)}\r\n                        filterOption={(input, option)=> option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                        {data?.data?.coins.map((coin)=>  <Option value={coin.name}>{coin.name}</Option>)}\r\n                    </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                <img\r\n                                    style={{maxWidth: '200px', maxHeight: '100px'}}\r\n                                    src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\"\r\n                                />\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100 ? `${news.description.substring(0, 100)}...`\r\n                                    : news.description\r\n                                }\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"news\"/>\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                    <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport {Switch, Route, Link} from 'react-router-dom';\r\nimport {Layout, Typography, Space} from \"antd\";\r\n\r\nimport {Navbar, HomePage, Exchanges, Cryptocurrencies, CryptoDetails, News} from \"./components\";\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"navbar\">\r\n                <Navbar/>\r\n            </div>\r\n            <div className=\"main\">\r\n                <Layout>\r\n                    <div className=\"routes\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <HomePage/>\r\n                            </Route>\r\n                            <Route exact path=\"/exchanges\">\r\n                                <Exchanges/>\r\n                            </Route>\r\n                            <Route exact path=\"/cryptocurrencies\">\r\n                                <Cryptocurrencies/>\r\n                            </Route>\r\n                            <Route exact path=\"/crypto/:coinId\">\r\n                                <CryptoDetails/>\r\n                            </Route>\r\n                            <Route exact path=\"/news\">\r\n                                <News/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n                <div className=\"footer\">\r\n                    <Typography.Title level={5} style={{color: 'white', textAlign: 'center'}}>\r\n                        Cryptoverse <br/>\r\n                        All rights reserved\r\n                    </Typography.Title>\r\n                    <Space>\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Space>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import {configureStore} from \"@reduxjs/toolkit\";\r\n\r\nimport {cryptoApi} from \"../services/cryptoApi\";\r\nimport {cryptoNewsApi} from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n    reducer:  {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport App from './App';\r\nimport store from \"./app/store\";\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </Router>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}